{"version":3,"sources":["components/AddCategoria.js","components/GifGrifItem.js","helpers/ConsultaApi.js","hooks/useFetchGifs.js","components/GifGrid.js","GitExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","String","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cast","type","onChange","target","value","GifGrifItem","props","url","title","console","log","className","src","alt","consultaAPI","categoria","a","encodeURI","fetch","resultado","json","data","gifs","map","img","id","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGrid","imagenes","GitExpertApp","categorias","onClick","ReactDOM","render","document","getElementById"],"mappings":"yMA0BeA,EAvBM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEtB,EAAoCC,mBAASC,QAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,uBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC5BT,GAAc,SAACU,GAAD,OAAWP,GAAX,mBAA0BO,OACzCN,EAAc,MAKhB,UACE,uBAAOO,KAAK,OAAOC,SAbG,SAACN,GACzBF,EAAcE,EAAEO,OAAOC,QAY2BA,MAAOX,IACvD,uBAAOQ,KAAK,SAASG,MAAM,gB,QCRlBC,EAXK,SAACC,GACnB,IAAOC,EAAWD,EAAXC,IAAIC,EAAOF,EAAPE,MAET,OADAC,QAAQC,IAAIJ,GAER,sBAAKK,UAAU,uCAAf,UACA,qBAAKC,IAAKL,EAAKM,IAAKL,IACpB,8BAAIA,EAAJ,W,uBCgBOM,EAxBE,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACF,mCACVT,EAFY,sDACF,mCADE,cAEsDU,UACtEF,GAHgB,+BAOQG,MAAMX,GAPd,cAOVY,EAPU,gBAQOA,EAAUC,OARjB,uBAQRC,EARQ,EAQRA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRjB,MAAOgB,EAAIhB,MACXD,IAAKiB,EAAIE,OAAOC,iBAAiBpB,QAdrB,kBAkBTe,GAlBS,kCAoBhBb,QAAQC,IAAR,MApBgB,0DAAH,sDCkBFkB,EAfM,SAACb,GAElB,MAA0BxB,mBAAS,CAC/B8B,KAAK,GACLQ,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KASA,OALAC,qBAAU,WACNlB,EAAYC,GAAWkB,MAAK,SAAAT,GAAG,OAAEO,EAAS,CAAEV,KAAKG,EAAIK,SAAQ,SAC9D,CAACd,IAGGe,GCoBII,EA5BC,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UASjB,EAA+Ba,EAAab,GAAhCoB,EAAZ,EAAOd,KAAcQ,EAArB,EAAqBA,QAIrB,OACG,qCACD,oBAAIlB,UAAU,kCAAd,SAAiDI,IAChDc,GAAW,wCACZ,qBAAKlB,UAAU,YAAf,SACKwB,EAASZ,KAAI,SAAAC,GACZ,OAAQ,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCEzBW,EAvBM,WACnB,MAAoC7C,mBAAS,CAAC,QAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAOA,OACE,qCACE,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,wBAAQgD,QAVM,SAAC1C,GACjBA,EAAEC,iBACFP,EAAc,GAAD,mBAAK+C,GAAL,CAAiB,CAAC,cAQ7B,qBACA,6BACGA,EAAWd,KAAI,SAACR,GACf,OAAO,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,Y,MCf/BwB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.09d24321.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategoria = ({ setCategorias }) => {\r\n  // const { setCategorias } = props;\r\n  const [inputValue, setInputValue] = useState(String);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n       setCategorias((cast) => [inputValue, ...cast]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" onChange={handleInputChange} value={inputValue} />\r\n      <input type=\"submit\" value=\"Agregar\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCategoria;\r\n\r\nAddCategoria.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react'\r\n\r\nconst GifGrifItem = (props) => {\r\n  const {url,title}=props\r\n    console.log(props);\r\n    return (\r\n        <div className=\"card animate__animated animate__flip\" >\r\n        <img src={url} alt={title} />\r\n        <p>{title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGrifItem\r\n","const consultaAPI = async (categoria) => {\r\n  const api_key = \"VQYhLU7iId9In4cUbAuBC8L1FJsFDtP7\";\r\n  const url = `http://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${encodeURI(\r\n    categoria\r\n  )}&limit=10`;\r\n\r\n  try {\r\n    const resultado = await fetch(url);\r\n    const { data } = await resultado.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default consultaAPI;","import {useState,useEffect} from 'react';\r\nimport consultaAPI from '../helpers/ConsultaApi';\r\n\r\nconst useFetchGifs = (categoria) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(() => {\r\n        consultaAPI(categoria).then(img=>setState({ data:img,loading:false}));\r\n    }, [categoria]);\r\n\r\n    \r\n    return state; //{data:[],loading:true}\r\n    \r\n}\r\n\r\nexport default useFetchGifs\r\n","/* import React, { useState ,useEffect} from \"react\";\r\nimport consultaAPI from \"../helpers/ConsultaApi\";*/\r\nimport GifGrifItem from \"./GifGrifItem\"; \r\nimport React from 'react';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n\r\n /*  const [imagenes, setImagenes] = useState([]);\r\n  useEffect(() => {\r\n    \r\n    consultaAPI(categoria).then(\r\n      setImagenes\r\n    );\r\n  }, [categoria]); */\r\n  const {data:imagenes,loading}= useFetchGifs(categoria);\r\n  \r\n\r\n\r\n  return (\r\n     <>\r\n    <h3 className='animate__animated animate__flip'>{categoria}</h3>\r\n    {loading && <p>Loading</p>}\r\n    <div className='card-grid'>\r\n        {imagenes.map(img => {\r\n          return  <GifGrifItem key={img.id} {...img} />\r\n         \r\n        })}\r\n      \r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from \"react\";\r\nimport AddCategoria from \"./components/AddCategoria\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GitExpertApp = () => {\r\n  const [categorias, setCategorias] = useState([\"dog\"]);\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n    setCategorias([...categorias, [\"Carlos\"]]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>GitExpertApp</h2>\r\n      <AddCategoria setCategorias={setCategorias} />\r\n      <hr />\r\n      <button onClick={handleAdd}>Agregar</button>\r\n      <ol>\r\n        {categorias.map((categoria) => {\r\n          return <GifGrid key={categoria} categoria={categoria}/>\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GitExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GitExpertApp from \"./GitExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GitExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}